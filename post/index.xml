<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on RaymondX成长记</title>
    <link>https://mrzhang123.github.io/post/</link>
    <description>Recent content in Posts on RaymondX成长记</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 31 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mrzhang123.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2024年终总结</title>
      <link>https://mrzhang123.github.io/post/2024/year-summary/</link>
      <pubDate>Tue, 31 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/year-summary/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://mrzhang123.github.io/post/2024/year-summary/img/header.jpg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;2024 年 11 月 5 日，周二，明叔发推说他将在周四直播《A State of Trance Year Mix 2024》的制作过程，并回答大家的问题。自 2004 年起，明叔每年年底都会制作并发布这张时长两个小时左右的混音专辑，收录当年最优秀的 Trance 音乐作品。在我看来，这张年度混音专辑的发布标志着这一年 Trance 音乐的总结，同时也意味着这一年即将结束。&lt;/p&gt;</description>
    </item>
    <item>
      <title>终章：自我完善与提升</title>
      <link>https://mrzhang123.github.io/post/2024/the-7-habits-4/</link>
      <pubDate>Fri, 06 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/the-7-habits-4/</guid>
      <description>&lt;p&gt;在《高效能人士的七个习惯》系列总结中，第一篇 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/the-7-habits-1&#34;&gt;七个习惯概述：高效的基石&lt;/a&gt; 探讨了这七个习惯的核心理念，阐述了它们在个人成长和职业发展中的重要性。第二篇 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/the-7-habits-2&#34;&gt;个人领域：从依赖到独立&lt;/a&gt; 聚焦于七个习惯中的前三个，探讨了如何通过自我约束和自律，逐步从依赖他人的状态过渡到真正的独立自主。第三篇 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/the-7-habits-3&#34;&gt;公众领域：从独立到互赖&lt;/a&gt; 详细探讨了第四、第五和第六个习惯，涵盖了人际交往和协作，通过双赢思维、移情聆听和统合综效，实现高效能的人际关系，提升合作效率和团队成果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>摘抄：巴菲特致股东信2024</title>
      <link>https://mrzhang123.github.io/post/2024/berkshire-shareholder-letter-2024/</link>
      <pubDate>Sun, 01 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/berkshire-shareholder-letter-2024/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://mrzhang123.github.io/post/2024/berkshire-shareholder-letter-2024/Capture-2024-09-25-100250.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;本文为阅读《巴菲特致股东信》系列 2024 年部分，主要摘录 2024.02.24 发布的致股东信中关于投资市场的现状与特点，伯克希尔的投资策略与原则，持有和回购策略，长期投资的案例分享，外汇和债务管理经验等内容。&lt;/p&gt;</description>
    </item>
    <item>
      <title>公众领域：从独立到互赖</title>
      <link>https://mrzhang123.github.io/post/2024/the-7-habits-3/</link>
      <pubDate>Sat, 23 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/the-7-habits-3/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在《高效能人士的七个习惯》系列总结中，第一篇文章 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/the-7-habits-1&#34;&gt;七个习惯概述：高效的基石&lt;/a&gt; 探讨了这七个习惯的核心理念，阐述了它们在个人成长和职业发展中的重要性。第二篇文章 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/the-7-habits-2&#34;&gt;个人领域：从依赖到独立&lt;/a&gt;，聚焦于七个习惯中的前三个，探讨了如何通过自我约束和自律，逐步从依赖他人的状态过渡到真正的独立自主。本文为该系列第三篇，将聚焦于第四、第五和第六个习惯，涵盖人际交往和协作。文章将详细探讨如何通过双赢思维、移情聆听和统合综效实现高效能的人际关系，提升合作效率和团队成果。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;!-- more --&gt;&#xA;&lt;h1 id=&#34;习惯四双赢思维人际领导原则&#34;&gt;习惯四：双赢思维——人际领导原则&lt;/h1&gt;&#xA;&lt;h2 id=&#34;人际交往的六种模式&#34;&gt;人际交往的六种模式&lt;/h2&gt;&#xA;&lt;p&gt;双赢并不是技巧，而是人际交往的哲学，是六种交往模式之一：&lt;/p&gt;</description>
    </item>
    <item>
      <title>IPO 投资态度：从神话到现实</title>
      <link>https://mrzhang123.github.io/post/2024/ipo/</link>
      <pubDate>Sun, 10 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/ipo/</guid>
      <description>&lt;p&gt;我之所以想谈论这个话题，是因为我的投资旅程正是从 IPO 的造富神话开始的。在这期间，我不仅曾参与其中，也看到周围人为之疯狂，大家普遍认为参与 IPO 是一个 “稳赚不赔” 的投资机会。然而，经过这些年对投资的接触，我逐渐意识到，IPO 其实并没有表面看起来那么美好。本文将通过引用多位投资大师对 IPO 的态度，梳理对 IPO 的正确认知，帮助大家了解其中的风险和现实，从而更理性地进行投资决策。&lt;/p&gt;</description>
    </item>
    <item>
      <title>公司分析：内在价值</title>
      <link>https://mrzhang123.github.io/post/2024/company-structure-5/</link>
      <pubDate>Sun, 27 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/company-structure-5/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;公司分析系列的第一篇文章 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-1&#34;&gt;公司分析 1：基础&lt;/a&gt; 探讨了财务报表和核心财务指标，第二篇 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-2&#34;&gt;公司分析 2：管理&lt;/a&gt; 评估了管理团队，第三篇 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-3&#34;&gt;公司分析 3：常见的财务伪装&lt;/a&gt; 揭示了财务伪装手法，第四篇 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-4&#34;&gt;公司分析 4：估值基础&lt;/a&gt; 讲述了估值的基础方法和指标。本文为该系列的第五篇，将深入探讨内在价值的重要性及其评估方法，其中重点介绍永续年金价值和所有者权益价值逐级折现现金流模型，从而帮助我们做出更明智的投资决策。&lt;/p&gt;</description>
    </item>
    <item>
      <title>个人领域：从依赖到独立</title>
      <link>https://mrzhang123.github.io/post/2024/the-7-habits-2/</link>
      <pubDate>Fri, 27 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/the-7-habits-2/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在《高效能人士的七个习惯》系列总结中，第一篇文章 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/the-7-habits-1&#34;&gt;七个习惯概述：高效的基石&lt;/a&gt; 探讨了这七个习惯的核心理念，阐述了它们在个人成长和职业发展中的重要性。本文为该系列的第二篇，将重点聚焦于七个习惯中的前三个，这些习惯主要涉及个人领域的自我提升。文章将详细探讨如何通过自我约束和自律，逐步从依赖他人的状态过渡到真正的独立自主。这个过程不仅是个人成长的关键阶段，也是迈向更高效能的重要一步。&lt;/p&gt;</description>
    </item>
    <item>
      <title>七个习惯概述：高效的基石</title>
      <link>https://mrzhang123.github.io/post/2024/the-7-habits-1/</link>
      <pubDate>Sun, 08 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/the-7-habits-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;《高效人士的七个习惯》这本书读了第二遍。时隔多年的重读，对书中的内容有了新的理解和感悟。正是这些新的体会，激发了创作这个系列文章的想法。通过写作，不仅能够将这些思考整理得更加清晰，也能将书中的精华分享给更多人。本文作为系列的开篇之作，旨在介绍这七个习惯的核心内容及其重要性。&lt;/p&gt;</description>
    </item>
    <item>
      <title>聊聊《黑神话：悟空》</title>
      <link>https://mrzhang123.github.io/post/2024/black-wukong/</link>
      <pubDate>Sun, 25 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/black-wukong/</guid>
      <description>&lt;p&gt;2024年8月20日，这一天必将铭记在中国游戏产业的发展史册上。因为就在这一天，由游戏科学打造的中国首款&amp;quot;3A级&amp;quot;大作《黑神话：悟空》正式上线，上线首日在 Steam 平台同时在线人数就超过 220 万，位列历史第二位，仅次于《绝地求生》（PUBG: BATTLEGROUNDS）。从上线到现在我一直在关注，感觉非常有意思，所以写这篇文章记录一下。&lt;/p&gt;</description>
    </item>
    <item>
      <title>公司分析：估值基础</title>
      <link>https://mrzhang123.github.io/post/2024/company-structure-4/</link>
      <pubDate>Sun, 28 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/company-structure-4/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本系列的第一篇文章 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-1&#34;&gt;公司分析 1：基础&lt;/a&gt; 探讨了财务报表的基本构成与核心财务指标。第二篇 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-2&#34;&gt;公司分析 2：管理&lt;/a&gt; 进一步分析了评估管理团队的标准。第三篇 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-3&#34;&gt;公司分析 3：常见的财务伪装&lt;/a&gt; 探讨了识别和解析潜在的财务伪装手法。本文为公司分析系列的第四篇，将深入探讨估值的基础方法和指标，从而更好地理解公司的内在价值和市场表现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>从萝卜快跑谈对 AI 的态度</title>
      <link>https://mrzhang123.github.io/post/2024/ai4/</link>
      <pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/ai4/</guid>
      <description>&lt;p&gt;最近，百度旗下的 Robotaxi 萝卜快跑在网络上迅速走红，吸引了大量用户前来体验这项新技术。与普通网约车相比，萝卜快跑的价格极具竞争力，每公里费用不到一块钱，确实便宜了许多。然而，也有网友观察到，由于无人驾驶系统过于谨慎，在复杂的十字路口可能会出现&amp;quot;相互礼让&amp;quot;的情况，导致交通拥堵，连交警都束手无策。&lt;/p&gt;</description>
    </item>
    <item>
      <title>对 AI 时代写作的思考</title>
      <link>https://mrzhang123.github.io/post/2024/ai3/</link>
      <pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/ai3/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在 AI 的时代，我们能够高效生成内容的同时，是否也会带来大量低质、观点趋同的内容？&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;随着 2022 年 11 月 30 日 OpenAI 发布 ChatGPT，一场 AI 革命就此拉开序幕。如今已经过去一年半，这段时间以来各路 AI 模型及应用层出不穷。底层大模型有 OpenAI 的 GPT-4o、Anthropic 的 Claude-3.5-Sonnet、Google 的 Gemini-1.5、Meta 的 Llama、字节的豆包、腾讯的混元大模型、阿里的通义千问、月之暗面 Kimi 等，应用上有基于 AI 的搜索 Perplexity、秘塔，以及大家应该都已经见到过的各类生成图文内容的应用，例如润色、扩写、总结、续写、风格模拟等等，例如像下面这样：&lt;/p&gt;</description>
    </item>
    <item>
      <title>公司分析：常见的财务伪装</title>
      <link>https://mrzhang123.github.io/post/2024/company-structure-3/</link>
      <pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/company-structure-3/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在本系列的第一篇文章 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-1/&#34;&gt;公司分析 1：基础&lt;/a&gt; 中，我们深入探讨了财务报表的基本构成与核心财务指标，帮助我们建立了对公司运作的基本认知。继此之后，在第二篇文章 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-2/&#34;&gt;公司分析 2：管理&lt;/a&gt; 中，我们进一步分析了评估管理团队的标准，旨在深化我们对管理层能力和表现的理解。现在，让我们转向公司分析的另一关键维度：识别和解析潜在的财务伪装手法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>摘抄：巴菲特致股东信2020</title>
      <link>https://mrzhang123.github.io/post/2024/berkshire-shareholder-letter-2020/</link>
      <pubDate>Sun, 30 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/berkshire-shareholder-letter-2020/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文为阅读《巴菲特致股东信》系列 2020 年部分，摘录 2020 年致股东信中个人认为比较重要内容。关于为什么要阅读致股东信，可以参考本系列的第一篇文章：&lt;a href=&#34;https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2021/&#34;&gt;摘抄：巴菲特致股东信2021&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>浅谈使命、愿景和价值观</title>
      <link>https://mrzhang123.github.io/post/2024/mission-vision-values/</link>
      <pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/mission-vision-values/</guid>
      <description>&lt;p&gt;使命、愿景和价值观是商业世界中常见且至关重要的概念。它们不仅是企业文化的象征，更是引导企业发展和运营的指南针。通过为企业提供明确的方向，激发员工的动力，并塑造公司的品牌形象，它们在企业中扮演着举足轻重的角色。&lt;/p&gt;</description>
    </item>
    <item>
      <title>公司分析：管理</title>
      <link>https://mrzhang123.github.io/post/2024/company-structure-2/</link>
      <pubDate>Fri, 21 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/company-structure-2/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在第一篇文章 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-1/&#34;&gt;公司分析：基础&lt;/a&gt; 中，我们深入探讨了财务报表的基本构成与核心财务指标，帮助我们建立了对公司运作的基本认知。现在，让我们把目光转向另一个关键领域：管理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>公司分析：基础</title>
      <link>https://mrzhang123.github.io/post/2024/company-structure-1/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/company-structure-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;新开专题：公司分析。本专题主要结合《财务报表分析》和《股市真规则》中的内容，旨在构建一个比之前的 &lt;a href=&#34;https://mrzhang123.github.io/post/2024/company-structure-overview/&#34;&gt;公司分析框架概述&lt;/a&gt; 更全面的分析框架。由于内容较多，所以拆分为多篇文章。本文为第一部分：基础分析，将深入解读财务报表的基本构成与核心财务指标，帮助读者建立对公司运作的初步认知，并为后续的投资决策提供基础支持。&lt;/p&gt;</description>
    </item>
    <item>
      <title>掌控习惯 2：详解行为转变四大定律</title>
      <link>https://mrzhang123.github.io/post/2024/atomic_habits2/</link>
      <pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/atomic_habits2/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在《掌控习惯》总结的第一部分 [[掌控习惯 1：正确认识和培养习惯]] 中，讲述了如何正确认识和培养习惯，以及如何通过理解习惯的形成和改变的机制来改善个人行为。在第二部分总结中，我将深入探讨如何应用四大行为转变定律来塑造自己的行为，培养良好的习惯并摒弃不良的习惯。同时，也会分享实用的策略来巩固和保持积极的习惯。&lt;/p&gt;</description>
    </item>
    <item>
      <title>公司分析框架概述</title>
      <link>https://mrzhang123.github.io/post/2024/company-structure-overview/</link>
      <pubDate>Sat, 30 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/company-structure-overview/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文依据书籍《财务报表分析：理论框架方法与案例》总结，简要概述整体分析一家公司的框架。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;整体分析框架&#34;&gt;整体分析框架&lt;/h1&gt;&#xA;&lt;p&gt;从整体上看，一家企业从事的活动就三项：经营、投资、筹资。企业活动通过会计系统产生财务报告，所以企业活动与财务报表的关系如下：&lt;/p&gt;</description>
    </item>
    <item>
      <title>对 AI 的思考：AI 的应用及局限</title>
      <link>https://mrzhang123.github.io/post/2024/ai2/</link>
      <pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/ai2/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本期核心观点：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;AI 降低创作门槛，让普通用户可以感受到创作的快乐，但创作出来的作品无法和专业人士的作品相提并论；&lt;/li&gt;&#xA;&lt;li&gt;专业人士利用 AI 可以提升效率，进一步拓展眼界，提升在自己领域的天花板；&lt;/li&gt;&#xA;&lt;li&gt;目前 AI 在艺术领域的应用相对局限，而在科技领域由于对算法准确性要求比较高，所以 AI 有明显的优势；&lt;/li&gt;&#xA;&lt;li&gt;AI 也许会让一些人失去工作，但也只是那些从事机械性重复工作或者简单工作的人，而在复杂领域，相比于 AI 替代人，更可能的方式是 AI 与人协同，共同达到更高的高度。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;今天体验了一下AI创造音乐：&lt;a href=&#34;https://app.suno.ai/&#34;&gt;SunoAI&lt;/a&gt; ，尝试将 What Took You So Long &amp;ndash; Armin van Buuren &amp;amp; Gryffin 的歌词输入，音乐风格输入 Trance(Main Floor) , Classic Trance,  House, Stutter House，尝试生成了 10 次，选择了一个个人觉得最好听的版本。生成的音乐整体还是非常棒的，对音乐风格把握相对比较准。但是在听完以后再去听原版的 What Took You So Long ，明显能够感受到差距还是很大的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>20年资产管理中学到的20堂课</title>
      <link>https://mrzhang123.github.io/post/2024/20-lessons/</link>
      <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/20-lessons/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;这篇文章是金融博主Ben Carlson基于自身二十年的投资实践，总结出的一些独特见解，我觉得其中一些观点很有启发性，所以翻译过来分享给大家！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;我于2005年步入职场。&lt;/p&gt;</description>
    </item>
    <item>
      <title>埃隆·马斯克五步工作法</title>
      <link>https://mrzhang123.github.io/post/2024/musk-algorithm/</link>
      <pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/musk-algorithm/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;这段内容摘自沃尔特·艾萨克森的《埃隆·马斯克传》，“五步工作法”不止是实用和高效的工作方法的精炼那么简单，还是一种成功的企业文化。而这正是马斯克运营他的公司的方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>掌控习惯 1：正确认识和培养习惯</title>
      <link>https://mrzhang123.github.io/post/2024/atomic_habits1/</link>
      <pubDate>Sat, 09 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/atomic_habits1/</guid>
      <description>&lt;p&gt;《掌控习惯：如何养成好习惯并戒除坏习惯》（英文名：&lt;em&gt;Atomic Habits&lt;/em&gt;）是 2024 年读的第一本书。这本书的英文版总结，之前在社交媒体上看到过好几次，但是一直没在意，直到有一天看到有人推荐这本书的中文版，仔细看才知道原来它就是 &lt;em&gt;Atomic Habits&lt;/em&gt;，所以 2024 年开年便开始读这本书。在阅读本书的过程中，我发现这本书不只是简单教你如何养成习惯，更从生物进化的角度让你理解人的天性，如何更好的利用天性来养成习惯。所以在阅读时就决定，在读完后一定要好好总结一下，本文便是对《掌控习惯》的总结，分享给大家。另外，如果只看一本习惯养成（自律）类的书，强烈推荐本书！&lt;/p&gt;</description>
    </item>
    <item>
      <title>AI时代：重塑技能门槛</title>
      <link>https://mrzhang123.github.io/post/2024/ai1/</link>
      <pubDate>Fri, 02 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2024/ai1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;核心观点：AI的应用将大幅度降低专业技能的门槛&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;随着AI的普及，我越来越多的使用AI，也搞了一些自己的机器人。在使用AI的过程中，我深刻地意识到，借助 AI，我们能够在短时间内学习新的技能，创造出优质的结果。例如，学习新的编程语言，设计宣传广告，或者编写报告等。在没有AI之前，这些任务通常需要专业人员才能完成。但现在，AI 的出现极大地降低了专业技能的门槛，让平凡的人也可以做到此前无法实现的事情。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023年终总结</title>
      <link>https://mrzhang123.github.io/post/2023/year-summary/</link>
      <pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/year-summary/</guid>
      <description>&lt;p&gt;2023 年可以说是 AI 元年了，这一年 AI 开始大规模爆发，各种 AI 开始出现在我们的工作和生活中，所以今年开头献给 AI，本文封面图及开头图均由 AI 模型 DALL-E 3 生成。&lt;/p&gt;</description>
    </item>
    <item>
      <title>缅怀查理·芒格：一位智者的启示</title>
      <link>https://mrzhang123.github.io/post/2023/charlie-munger/</link>
      <pubDate>Sat, 02 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/charlie-munger/</guid>
      <description>&lt;p&gt;本周四早上，看到芒格离世的消息。距离100岁生日还有一个月，查理·芒格在加利福尼亚州的一家医院里与世长辞。沃伦·巴菲特永失挚友，世界又少了一位幽默而桀骜的智者。&lt;/p&gt;</description>
    </item>
    <item>
      <title>理解债务危机 4：债务危机中常见的货币政策</title>
      <link>https://mrzhang123.github.io/post/2023/debt-crisis-4/</link>
      <pubDate>Sun, 05 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/debt-crisis-4/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;上一篇文章 [[理解债务危机 3：通缩性债务周期详解]] 详细介绍了通缩性债务危机所经历的七个阶段，其中讲到在各阶段可以使用的政策，本文将债务危机中用到的货币政策单独拿出来，着重介绍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>理解债务危机 3：通缩性债务周期详解</title>
      <link>https://mrzhang123.github.io/post/2023/debt-crisis-3/</link>
      <pubDate>Sat, 04 Nov 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/debt-crisis-3/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;上一篇文章 [[理解债务危机 2：债务周期模型]] 回答了为什么债务危机具有周期性，介绍了债务周期上行和下行阶段的自我强化，并简单介绍了债务危机的两种分类：通缩性债务危机和通胀性债务危机。本文将详细介绍通缩性债务周期经历的几个阶段，并会详细讲解每个阶段的特征级应对手段。&lt;/p&gt;</description>
    </item>
    <item>
      <title>理解债务危机 2：债务周期模型</title>
      <link>https://mrzhang123.github.io/post/2023/debt-crisis-2/</link>
      <pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/debt-crisis-2/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;上一篇文章 &lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=Mzg3NTI1MDI1MA==&amp;amp;mid=2247484251&amp;amp;idx=1&amp;amp;sn=0b5f8a0f13bcce256ea965eb3844d162&amp;amp;chksm=cec5147ef9b29d68942aef0d5f916fc24e0d11c2d50c10edf77630ef01920ea03350f9a0989b&amp;amp;token=2053176653&amp;amp;lang=zh_CN#rd&#34;&gt;理解债务危机 1：货币与银行&lt;/a&gt; 主要介绍了理解债务危机所需要的前置知识，并介绍了银行是如何创造货币的。本篇文章基于上一篇文章的基础，进一步讲述典型的债务周期模型。&lt;/p&gt;</description>
    </item>
    <item>
      <title>理解债务危机 1：货币与银行</title>
      <link>https://mrzhang123.github.io/post/2023/debt-crisis-1/</link>
      <pubDate>Sun, 17 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/debt-crisis-1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;由于债务危机相关的内容涉及面广，内容复杂，不太可能一篇文章能说明白，所以开一个合集，为大家循序渐进的讲解债务危机。本文是该合集的第一部分，具体解释为什么想写债务危机相关内容，理解债务危机需要的一些前置知识，解释货币与银行的关系并着重讲解货币是如何传导的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>摘抄：巴菲特致股东信2023</title>
      <link>https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2023/</link>
      <pubDate>Sat, 26 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2023/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2023/6402.jpeg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;A common belief is that people choose to save when young, expecting thereby to maintain their living standards after retirement. Any assets that remain at death, this theory says, will usually be left to their families or, possibly, to friends and philanthropy.&lt;/p&gt;&#xA;&lt;p&gt;Our experience has differed. We believe Berkshire’s individual holders largely to be of the once-a-saver, always-a-saver variety. Though these people live well, they eventually dispense most of their funds to philanthropic organizations. These, in turn, redistribute the funds by expenditures intended to improve the lives of a great many people who are unrelated to the original benefactor. Sometimes, the results have been spectacular.&lt;/p&gt;</description>
    </item>
    <item>
      <title>成为务实的程序员</title>
      <link>https://mrzhang123.github.io/post/2023/pragmatic-programmer/</link>
      <pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/pragmatic-programmer/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文是阅读《程序员修炼之道》后的一些感想和摘抄，个人觉得其中很多内容非常不错，所以分享出来，期望能和大家共同学习，努力成为一名务实的程序员。作为务实的程序员，你是编程技艺的行家。倾听需求，提供建议；传达信息，做决策。捕捉难以捉摸的需求，找到表达方式，让计算机轻松应对。记录工作，让他人理解；工程化，促进发展。努力在项目中创造奇迹。&lt;/p&gt;</description>
    </item>
    <item>
      <title>沃尔特·施洛斯的投资智慧</title>
      <link>https://mrzhang123.github.io/post/2023/walter-schloss/</link>
      <pubDate>Wed, 16 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/walter-schloss/</guid>
      <description>&lt;h2 id=&#34;沃尔特施洛斯是谁&#34;&gt;沃尔特·施洛斯是谁？&lt;/h2&gt;&#xA;&lt;p&gt;沃尔特·施洛斯（Walter Schloss）是知名的美国投资者，被誉为价值投资领域的传奇人物之一。他于1916年生于纽约市，2012年去世。&lt;/p&gt;</description>
    </item>
    <item>
      <title>摘抄：巴菲特致股东信2022</title>
      <link>https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2022/</link>
      <pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2022/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2022/6401.jpeg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Whatever our form of ownership, our goal is to have meaningful investments in businesses with both durable economic advantages and a first-class CEO. Please note particularly that we own stocks based upon our expectations about their long-term business performance and not because we view them as vehicles for timely market moves. That point is crucial: &lt;strong&gt;Charlie and I are not stock-pickers; we are business-pickers&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;无论我们拥有何种所有权形式，我们的目标都是在具有持久经济优势和一流CEO的企业中进行有意义的投资。请特别注意，我们持有股票是基于我们对它们长期业务表现的预期，而不是因为我们认为它们是适合及时市场行动的工具。这一点非常关键：&lt;strong&gt;查理和我不是股票择时者，我们是企业择时者&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>摘抄：巴菲特致股东信2021</title>
      <link>https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2021/</link>
      <pubDate>Sun, 23 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2021/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://mrzhang123.github.io/post/2023/berkshire-shareholder-letter-2021/640.jpeg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;开一个合集，记录巴菲特致股东信中的重点内容。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;为什么应该阅读伯克希尔致股东信&#34;&gt;为什么应该阅读伯克希尔致股东信？&lt;/h2&gt;&#xA;&lt;p&gt;沃伦·巴菲特的致股东信被全球许多投资者、商业领袖和经济学家誉为宝贵的知识来源，他们每年都期待阅读这些信件。通过阅读巴菲特的致股东信，我们可以获取以下信息和见解：&lt;/p&gt;</description>
    </item>
    <item>
      <title>释放创新力：无目标之旅的成功秘密</title>
      <link>https://mrzhang123.github.io/post/2023/target/</link>
      <pubDate>Sun, 16 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/target/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;有时目标导向思维会阻碍创新，成功更依赖于拥抱变化和新机会，而非盲目追求既定目标。在创新过程中，趣味性和开放的探索态度比预设的目标更为关键。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;《为什么伟大不能被计划》是一本探讨目标设定与实现的书，对于目标的设定与实现，本书提出了一种新的思考方式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>AIGC：内容创作的新时代</title>
      <link>https://mrzhang123.github.io/post/2023/aigc/</link>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/aigc/</guid>
      <description>&lt;p&gt;2022 年 11 月底在互联网上出现了一个叫 ChatGPT 的人工智能聊天机器人，紧接着它以火箭般的速度在互联网上传播，从 11 月底发布到月活破亿仅用了两个月的时间，与之相比，TikTok 用了 9 个月，Instagram 用了两年半（30 个月），Facebook 则用了 4 年半（54 个月）。与此同时“图文成片”、“AI 绘画”等功能也在各大平台爆火。人工智能的潜力再次被证明，而这些均在来同一个领域：&lt;strong&gt;AIGC&lt;/strong&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>聊一聊 JS 中的二进制</title>
      <link>https://mrzhang123.github.io/post/2023/javascript-binary/</link>
      <pubDate>Sat, 18 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/javascript-binary/</guid>
      <description>&lt;p&gt;在 JavaScript 中，有很多跟二进制相关的概念，例如 &lt;code&gt;Buffer&lt;/code&gt;，&lt;code&gt;TypedArray&lt;/code&gt;，&lt;code&gt;ArrayBuffer&lt;/code&gt;，&lt;code&gt;Blob&lt;/code&gt;，&lt;code&gt;Stream&lt;/code&gt; 等等。那么这些概念彼此之间的关系是什么？各自的使用场景是什么？这将是本文内容的重点。&lt;/p&gt;</description>
    </item>
    <item>
      <title>明确目标才能持续专注于最重要的事</title>
      <link>https://mrzhang123.github.io/post/2023/know-your-target/</link>
      <pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2023/know-your-target/</guid>
      <description>&lt;p&gt;最近在读《股票深度交易心理学》，其中提到了关于如何持续专注于在交易中对我们有价值的方面。总结来说就是：明确自己的价值观，明确为什么你要做交易，然后运用价值观，为你提供指导和指引方向。&#xA;我觉得这个观点推广到其他事情上也是一样的，只有明确做事的目标（或者说初心），才能在出现突发情况时不至于慌乱，不至于在分心。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2022年终总结</title>
      <link>https://mrzhang123.github.io/post/2022/2022-2023-new-year/</link>
      <pubDate>Sun, 25 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2022/2022-2023-new-year/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;时间过的好快，不知不觉中又到年底了。从 2016 年开始，每年年底我都会总结这一年来自己做的重要事情。管理者每年通过致股东信的方式给股东汇报这一年来公司的运营情况，而我通过年终总结的方式为自己汇报这一年来自己的所思所想，所获所得，同时为下一年的计划提供参考，也为将来的自己留下美好回忆。&lt;/p&gt;</description>
    </item>
    <item>
      <title>高效使用待办清单</title>
      <link>https://mrzhang123.github.io/post/2022/use-to-do-list/</link>
      <pubDate>Sun, 04 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2022/use-to-do-list/</guid>
      <description>&lt;p&gt;待办清单（to-do list）是一种用起来最简单的任务管理方法，我们将需要完成的任务列下来，在之后的时间里，每完成一个任务，就在待办清单中勾掉一个。但一段时间过去后，我们可能发现自己的待办清单中的待办事项越来越多，很多事情也没有按照我们预想的进展进行。似乎待办清单用与不用并没有太大区别，但事实是否真的如此？为什么没有完成的待办越来越多？究竟如何正确的使用待办清单？&lt;/p&gt;</description>
    </item>
    <item>
      <title>认识文件系统</title>
      <link>https://mrzhang123.github.io/post/2022/file-system/</link>
      <pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2022/file-system/</guid>
      <description>&lt;p&gt;我们平时使用计算机时，创建目录、更新目录、创建文件、编辑文件几乎是我们每天在计算机上做的事情。那么你是否深入思考过，为什么计算机能对目录和文件进行操作？为什么计算机能存储这些文件？其实完成这些工作的背后就是我们今天要介绍的主角——文件系统。&lt;/p&gt;</description>
    </item>
    <item>
      <title>“关注圈”和“影响圈”</title>
      <link>https://mrzhang123.github.io/post/2022/fllow-and-effect/</link>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2022/fllow-and-effect/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;满意源自内心，那些对人性一无所知的人总是妄图通过改变外在而不是内在的性情来追求幸福，结果必定是徒劳无功，而本来想摆脱的痛苦却会与日俱增。——塞缪尔.约翰逊&lt;/p&gt;</description>
    </item>
    <item>
      <title>并发编程中的锁、条件变量和信号量</title>
      <link>https://mrzhang123.github.io/post/2022/lock-condition-signal/</link>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2022/lock-condition-signal/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在并发编程中，经常会涉及到锁、条件变量和信号量。本文从并发开始，探究为什么需要它们，它们的概念，实现原理以及应用。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;并发简介&#34;&gt;并发简介&lt;/h1&gt;&#xA;&lt;p&gt;并发是指多个事情，在同一&lt;strong&gt;时间段内&lt;/strong&gt;同时发生了。和并发经常一起被提到的是并行。并行是指多个事情，在同一&lt;strong&gt;时间点&lt;/strong&gt;上同时发生了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go 并发编程初识</title>
      <link>https://mrzhang123.github.io/post/2022/go-concurrency/</link>
      <pubDate>Sat, 11 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2022/go-concurrency/</guid>
      <description>&lt;p&gt;Go 有两种并发编程的风格：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通讯顺序进程（Communicating Sequential Process，CSP），主要使用 goroutine和通道（channel）。CSP是一个并发的模式，在不同的执行体（goroutine）之间传递至，但是变量本身局限局限于单一的执行体。&lt;/li&gt;&#xA;&lt;li&gt;传统的共享内存多线程。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;goroutine-和通道&#34;&gt;goroutine 和通道&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goroutine&#34;&gt;goroutine&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;在 Go 里，每一个并发执行的活动称为 goroutine。&lt;/p&gt;</description>
    </item>
    <item>
      <title>再见2021，你好2022</title>
      <link>https://mrzhang123.github.io/post/2021/2021-2022-new-year/</link>
      <pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2021/2021-2022-new-year/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;不知不觉又到了年底了，又到了年终总结的时候了。一年过的真的太快了，回想起来去年年终总结2020年12月31日写完，发出来后走在下班的路上开心的情景还历历在目。如今又要写新的一年的年终总结了。今年发生的事情还是挺多的，疫情还在继续，通胀，加息预期，教育“双减”，互联网告别“996、大小周”元年、裁员大潮，就在这一年快要结束的时候，陕西又爆发了疫情。总之一切都充满了不确定性。我个人觉得，2022年可能会更难。&lt;/p&gt;</description>
    </item>
    <item>
      <title>从新能源这波行情看机构与散户的区别</title>
      <link>https://mrzhang123.github.io/post/2021/2021-newenergy/</link>
      <pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2021/2021-newenergy/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文摘自7月14日自己对投资、市场的反思，当天看到一篇关于李录减持比亚迪以及大佬们开始激流勇退新能源的文章，引发自己的一些思考。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;7月14日李录减持了10%的比亚迪，比亚迪大跌。去比亚迪股票的资讯里看了下，看到一篇关于新能源的文章：&lt;a href=&#34;https://mp.weixin.qq.com/s/2jGAdmrV8CKtK42zdFGx7Q&#34;&gt;李录大手笔减持比亚迪，让人想起高瓴清仓新能源车&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>再见2020，起航2021</title>
      <link>https://mrzhang123.github.io/post/2020/2020-2021newyear/</link>
      <pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2020/2020-2021newyear/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;从2016年开始，每年年底都会总结一下这一年来自己经历的事，有哪些成长，今年也不例外。今年这一年对我，对我的祖国，对整个世界来说都是不平凡的一年，这一年我们经历了太多太多，新冠疫情，抢口罩等防护设备，居家办公，股市大跌、美股两次熔断，以及下决心开始去健身房，成功减肥30多斤等等吧。2020年注定是载入史册的一年，因为这一年有太多的出乎意料，期待在2021年一切会重归美好&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>基础排序</title>
      <link>https://mrzhang123.github.io/post/2020/2020-basicsort/</link>
      <pubDate>Tue, 14 Jul 2020 09:08:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2020/2020-basicsort/</guid>
      <description>&lt;h2 id=&#34;选择排序&#34;&gt;选择排序&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;首先找到数组中最小的那个元素，其次将它和数组第一个元素交换位置（如果第一个元素就是最小元素，那么它就和自己交换）。再次，在剩下的元素中找到最小元素，将它和数组的第二个元素交换位置。如此往复，直到将整个数组排序。这种方法叫做选择排序。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>「译」V8中的指针压缩</title>
      <link>https://mrzhang123.github.io/post/2020/2020_pointer_compression_in_v8/</link>
      <pubDate>Thu, 23 Apr 2020 17:08:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2020/2020_pointer_compression_in_v8/</guid>
      <description>&lt;p&gt;原文链接：https://v8.dev/blog/pointer-compression&lt;/p&gt;&#xA;&lt;p&gt;内存和性能之间的斗争始终存在。作为用户，我们希望速度又快占用内存又少。然而通常情况下，提高性能需要消耗更多的内存（反之亦然）。&lt;/p&gt;</description>
    </item>
    <item>
      <title>学习读财报之资产负债表</title>
      <link>https://mrzhang123.github.io/post/2020/2020-blance-sheet/</link>
      <pubDate>Sun, 12 Apr 2020 20:15:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2020/2020-blance-sheet/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;分析上市公司，首先第一步就是阅读公司的财务报表，本系列文章旨在总结之前阅读的&lt;a href=&#34;https://book.douban.com/subject/25926542/&#34;&gt;《一本书读懂财务报表》&lt;/a&gt;，加深对书中概念的理解。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>vim的搜索与替换</title>
      <link>https://mrzhang123.github.io/post/2020/2020-vimsearch/</link>
      <pubDate>Sun, 15 Mar 2020 16:15:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2020/2020-vimsearch/</guid>
      <description>&lt;p&gt;在使用编辑器的过程中，我们会经常使用到搜索 / 替换，大部分编辑器可以通过快捷键呼出搜索框来搜索 / 替换，通过选择不同的选项可以做到匹配大小写，精准匹配，模糊匹配等等。那么在vim中，这些操作该如何实现？本文将介绍在vim中常用的搜索文本，替换文本操作以及如何结合插件实现更强大的搜索。&lt;/p&gt;</description>
    </item>
    <item>
      <title>解析OKR</title>
      <link>https://mrzhang123.github.io/post/2020/2020_okr/</link>
      <pubDate>Thu, 27 Feb 2020 22:30:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2020/2020_okr/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;尽管很多人都很努力地工作，但是他们却没能取得什么成就感。&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                                ----安迪·格鲁夫&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;第一次听说OKR是一年前刚来新公司要定制试用期目标，那时候也没有太在意OKR是什么，只是觉得就是绩效，跟KPI一样。直到后来转正，每隔一段时间都要定制自己的OKR，同时在吴军老师的书&lt;a href=&#34;https://book.douban.com/subject/30144978/&#34;&gt;《见识》&lt;/a&gt;中也提到关于OKR的使用，如何用OKR管理自己的时间等等。这时候开始觉得有必要了解一下OKR到底是什么，该如何写，如何用OKR帮助自己管理工作 / 生活中的时间。本文是在阅读了&lt;a href=&#34;https://book.douban.com/subject/30396635/&#34;&gt;《这就是OKR》&lt;/a&gt;之后的一些总结以及自己对OKR的理解。&lt;/p&gt;</description>
    </item>
    <item>
      <title>《这就是OKR》读书笔记</title>
      <link>https://mrzhang123.github.io/post/2020/2020_this_is_okr/</link>
      <pubDate>Sun, 23 Feb 2020 17:08:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2020/2020_this_is_okr/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;尽管很多人都很努力地工作，但是他们却没能取得什么成就感。                &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                                          ----安迪 格鲁夫&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>再见2019，你好2020</title>
      <link>https://mrzhang123.github.io/post/2019/2019-2020newyear/</link>
      <pubDate>Tue, 31 Dec 2019 02:00:25 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-2020newyear/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;不知不觉又到年底了，临近年底大家都忙着总结2019年发生的大事儿，比如前端2019年发生了哪些大事儿，投资界2019年发生了哪些事情让大家惊讶，DJ们也忙着制作并推出 Year Mix 2019。我从2016年开始，在每年的年底都会写一篇年底总结文章，回头看看这一年对我来说重要的事情，这一年我又学到了哪些，有哪些成长，今年也不例外&amp;hellip;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>「译」JS新特性“可选链式调用”</title>
      <link>https://mrzhang123.github.io/post/2019/2019-optional-chaining/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-optional-chaining/</guid>
      <description>&lt;p&gt;在JavaScript中长的链式调用可能容易出错，因为任何一步都可能出现&lt;code&gt;null&lt;/code&gt;或&lt;code&gt;undefined&lt;/code&gt;（也被称为“无效”值）。检查每个步骤的属性是否存在很容易变成深层次嵌套的&lt;code&gt;if&lt;/code&gt;声明或者复制属性访问链的长的&lt;code&gt;if&lt;/code&gt;条件：&lt;/p&gt;</description>
    </item>
    <item>
      <title>记一次vim性能优化</title>
      <link>https://mrzhang123.github.io/post/2019/2019-vimperformance/</link>
      <pubDate>Sun, 01 Sep 2019 16:15:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-vimperformance/</guid>
      <description>&lt;h3 id=&#34;关键点&#34;&gt;关键点&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;vim -u NONE -N&lt;/code&gt;可以不加载vim配置和插件打开vim&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;vim --startuptime vim.log&lt;/code&gt;可以生成vim启动的log&lt;/li&gt;&#xA;&lt;li&gt;使用&lt;code&gt;vim-plug&lt;/code&gt;插件管理工具，给插件配置&lt;code&gt;for&lt;/code&gt; or &lt;code&gt;on&lt;/code&gt;可以实现插件懒加载&lt;/li&gt;&#xA;&lt;li&gt;设置&lt;code&gt;foldmethod=syntax&lt;/code&gt;会导致vim插入模式下卡顿&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>不可不知的债务危机</title>
      <link>https://mrzhang123.github.io/post/2019/2019-debtcrisisoverview/</link>
      <pubDate>Wed, 07 Aug 2019 23:43:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-debtcrisisoverview/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在17年年底，因为数字货币的一轮暴涨，开始关注金融，开始关注股票，基金，学习一些跟金融知识，本文是我自写文章以来第一篇关于金融的文章，是我在阅读瑞达里欧《债务危机》的一些摘要和理解。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>「译」ES 草案：class私有属性</title>
      <link>https://mrzhang123.github.io/post/2019/2019-privatefields/</link>
      <pubDate>Sun, 21 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-privatefields/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;原文链接：https://2ality.com/2019/07/private-class-fields.html&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;class属性是关于直接在类体内创建属性和类似构造，这篇播客文章是关于它们的系列文章的一部分：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://2ality.com/2019/07/public-class-fields.html&#34;&gt;公有class属性&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;私有class属性&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Roman To Int</title>
      <link>https://mrzhang123.github.io/post/2019/2019-leetcode-romantoint/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-leetcode-romantoint/</guid>
      <description>&lt;h3 id=&#34;题目&#34;&gt;题目&lt;/h3&gt;&#xA;&lt;p&gt;罗马数字使用七个不同的符号表示：&lt;code&gt;I&lt;/code&gt;，&lt;code&gt;V&lt;/code&gt;，&lt;code&gt;X&lt;/code&gt;，&lt;code&gt;L&lt;/code&gt;，&lt;code&gt;C&lt;/code&gt;，&lt;code&gt;D&lt;/code&gt;和&lt;code&gt;M&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Two Sum</title>
      <link>https://mrzhang123.github.io/post/2019/2019-leetcode-twosum/</link>
      <pubDate>Tue, 16 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-leetcode-twosum/</guid>
      <description>&lt;h3 id=&#34;题目&#34;&gt;题目&lt;/h3&gt;&#xA;&lt;p&gt;给定一个整数数组，返回两个数的索引，这两个数相加等于特定的目标。&lt;/p&gt;&#xA;&lt;p&gt;你可以假定每次输入只有一个解决方案，并且你不会使用相同的元素两次。&lt;/p&gt;</description>
    </item>
    <item>
      <title>「译」稳定的Array.prototype.sort</title>
      <link>https://mrzhang123.github.io/post/2019/2019-stablesort/</link>
      <pubDate>Mon, 08 Jul 2019 23:10:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-stablesort/</guid>
      <description>&lt;p&gt;原文链接：https://v8.dev/features/stable-sort#support&lt;/p&gt;&#xA;&lt;p&gt;假设你有一系列的狗狗，每个狗狗有名字和评分。（如果这个例子看起来很奇怪，你应该知道有一个专门针对这个的Twitter账户&amp;hellip;别问为什么！）&lt;/p&gt;</description>
    </item>
    <item>
      <title>【译】10个React组件的戒律</title>
      <link>https://mrzhang123.github.io/post/2019/2019-componentstips/</link>
      <pubDate>Sun, 07 Jul 2019 15:43:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-componentstips/</guid>
      <description>&lt;p&gt;原文链接：&lt;a href=&#34;https://dev.to/selbekk/the-10-component-commandments-2a7f&#34;&gt;The 10 Component Commandments&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;创建被很多人用的组件是很难的。如果那些&lt;code&gt;props&lt;/code&gt;作为公共API，你需要非常谨慎的考虑哪些&lt;code&gt;props&lt;/code&gt;是可以接收的。&lt;/p&gt;&#xA;&lt;p&gt;这篇文章将给你快速介绍API的最佳实践方法，同时有十条实践戒律清单，你可以在创建组件的时候使用，你的开发者将会很乐意使用它们。&lt;/p&gt;</description>
    </item>
    <item>
      <title>终端复用神器Tmux</title>
      <link>https://mrzhang123.github.io/post/2019/2019-tmux/</link>
      <pubDate>Sun, 23 Jun 2019 14:32:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-tmux/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;记得第一次接触tmux是在一年前，当时是为了复用终端，不想开多个item2的tab，但是后来发现完全不会用，就一直搁在那儿，直到半年前再次拿起来，开始学习一些tmux的用法，如今半年过去了，真正的明白了为什么说tmux是神器。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>使用Axios请求时如何传递数组？</title>
      <link>https://mrzhang123.github.io/post/2019/2019-axiosparams/</link>
      <pubDate>Sat, 18 May 2019 16:40:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-axiosparams/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;最近在项目开发中使用Axios请求，API层使用&lt;strong&gt;Node&lt;/strong&gt;，在GET请求传递数组参数时候遇到了一些问题，这里总结一下。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在开发中经常会使用axios作为请求库，在请求过程中，经常会传递数组作为参数，在实际开发过程中发现，如果在POST请求中，直接传递数组即可，但是在GET请求中，本质上是将参数拼接到url后面，作为参数，即&lt;code&gt;http://xx.xx.com?a=1&amp;amp;b=2&lt;/code&gt;这样的形式，如果直接传递数组，则在API层拿到的数据就是一个数组样式的字符串，这并不符合我们的要求。那么，如何传递数组呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>简述 React Hooks 特征和使用方式</title>
      <link>https://mrzhang123.github.io/post/2019/2019-reacthooks/</link>
      <pubDate>Sun, 24 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-reacthooks/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;学习React Hooks简单记录一下官方文档关于Hooks的一些特征和使用方式，摘录自官方文档。后续使用后，再做总结&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>React 新特性总结</title>
      <link>https://mrzhang123.github.io/post/2019/2019-reactnews/</link>
      <pubDate>Wed, 16 Jan 2019 22:58:11 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2019/2019-reactnews/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;自 React 16 发步以来 React 一直给大家带来很多令人兴奋的新特性，本文旨在将 React 16 发布以来一些重要的特性以及未来将要实现特性串联起来。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>再见2018，你好2019</title>
      <link>https://mrzhang123.github.io/post/2018/2018-2019newyear/</link>
      <pubDate>Mon, 07 Jan 2019 00:07:25 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2018/2018-2019newyear/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;好久没写博客了，不知不觉的，就又到年底了，2018年已经过去，2019已经到来，回望2018这一年，自己又有了新的成长，新的变化，在去年写的一些计划中，自己也实践了一部分并且有所收获，还是非常开心的。这一年总体来说有这么几件大事儿吧，换了一份工作，换了一个身份，开始新的实践，有了新的认知。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>「译」如何使用React生命周期方法</title>
      <link>https://mrzhang123.github.io/post/2018/2018-reactlifecycle/</link>
      <pubDate>Sat, 28 Jul 2018 13:39:28 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2018/2018-reactlifecycle/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;原文链接：&lt;a href=&#34;https://www.andreasreiterer.at/reactjs-lifecycle-methods/&#34;&gt;How to use React Lifecycle Methods&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>从零开始搭建React应用（二）——React应用架构</title>
      <link>https://mrzhang123.github.io/post/2018/2018-reactproject2/</link>
      <pubDate>Wed, 18 Jul 2018 10:28:51 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2018/2018-reactproject2/</guid>
      <description>&lt;p&gt;上一篇文章——&lt;a href=&#34;https://juejin.im/post/5af6857651882542682e4843&#34;&gt;从零开始搭建 React 应用（一）——基础搭建&lt;/a&gt;讲述了如何使用 webpack 搭建一个非常基础的 react 开发环境。本文将详细讲述搭建一个 React 应用的架构。&lt;/p&gt;</description>
    </item>
    <item>
      <title>从零开始搭建React应用（一）——基础搭建</title>
      <link>https://mrzhang123.github.io/post/2018/2018-reactproject1/</link>
      <pubDate>Wed, 18 Jul 2018 10:26:46 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2018/2018-reactproject1/</guid>
      <description>&lt;p&gt;项目链接：&lt;a href=&#34;https://github.com/MrZhang123/Web_Project_Build/tree/master/react-webpack&#34;&gt;https://github.com/MrZhang123/Web_Project_Build/tree/master/react-webpack&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ES2018（ES9）的新特性</title>
      <link>https://mrzhang123.github.io/post/2018/2018-es2018/</link>
      <pubDate>Wed, 20 Jun 2018 17:39:25 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2018/2018-es2018/</guid>
      <description>&lt;p&gt;原文链接：https://www.sitepoint.com/es2018-whats-new/&lt;/p&gt;&#xA;&lt;p&gt;在这篇文章中，我将介绍ES2018（ES9）的新特性，并介绍如何使用它们。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Webpack中publicPath详解</title>
      <link>https://mrzhang123.github.io/post/2018/2018-webpackpublicpath/</link>
      <pubDate>Sat, 12 May 2018 12:26:43 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2018/2018-webpackpublicpath/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;最近自己在搭建一个基于webpack的react项目，遇到关于&lt;code&gt;output.publicPath&lt;/code&gt;和webpack-dev-server中&lt;code&gt;publicPath&lt;/code&gt;的问题，而官方文档对它们的描述也不是很清楚，所以自己研究了下并写下本文记录。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>CSS Modules在React中的应用</title>
      <link>https://mrzhang123.github.io/post/2018/2018-reactcssmodules/</link>
      <pubDate>Fri, 13 Apr 2018 14:32:17 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2018/2018-reactcssmodules/</guid>
      <description>&lt;p&gt;由于CSS是全局的，所以在写组件的时候，经常会遇到CSS命名重复导致样式覆盖（冲突），所以我们在写CSS的时候一般会这么处理&lt;/p&gt;</description>
    </item>
    <item>
      <title>MAF项目总结</title>
      <link>https://mrzhang123.github.io/post/2018/2018-maf/</link>
      <pubDate>Sun, 14 Jan 2018 20:22:59 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2018/2018-maf/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;做了一个多月的售后服务APP在昨天终于上线，期间出现各种问题，反思总结一下，以备后续做项目时候优化流程，更快更好的开发。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>再见2017，你好2018</title>
      <link>https://mrzhang123.github.io/post/2017/2017-2018newyear/</link>
      <pubDate>Sun, 31 Dec 2017 23:14:24 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-2018newyear/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;不知不觉中，2017年已经走到尾声，2018年马上要到来了，回想这一年，无论是工作还是生活都发生了很多变化，如果用一个字来总结2017，那么这个字就是“变”,这些事情让我有了更多的想法，这也让我对2018年有了期待。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>RN Webview与Web的通信与调试</title>
      <link>https://mrzhang123.github.io/post/2017/2017-rnwebview/</link>
      <pubDate>Wed, 20 Dec 2017 19:24:07 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-rnwebview/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;React Native Version:0.51&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;RN 在 0.37 版本中加入了&lt;code&gt;WebView&lt;/code&gt;功能，所以想要在使用&lt;code&gt;WebView&lt;/code&gt;,版本必须&amp;gt;=0.37，发送的 message 只能是字符串，所以需要将其他格式的数据转换成字符串，在接收到后再转换回去，其实直接用&lt;code&gt;JSON.stringify&lt;/code&gt;和&lt;code&gt;JSON.parse&lt;/code&gt;就可以&lt;/p&gt;</description>
    </item>
    <item>
      <title>JS转换转义字符</title>
      <link>https://mrzhang123.github.io/post/2017/2017-jsdecode/</link>
      <pubDate>Sat, 25 Nov 2017 23:03:40 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-jsdecode/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;这周在开发后端系统的时候，遇到了需要将后端传过来的转义字符进行转义然后再渲染到html中，因为之前也没有遇到过，所以研究了研究，记录一下。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>小记：React操作真实DOM实现动态吸底部</title>
      <link>https://mrzhang123.github.io/post/2017/2017-reactdom/</link>
      <pubDate>Sun, 22 Oct 2017 17:23:11 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-reactdom/</guid>
      <description>&lt;p&gt;动态吸底：开始时fixed在页面上，当页面滚动到距离底部一定距离的时fixed部分固定。&lt;/p&gt;&#xA;&lt;p&gt;这个是需要计算页面滚动距离的，如果使用Jquery或者原生js实现是非常好实现的，但是由于使用react并不推崇操作DOM，但是如果使用virtual DOM的话是无法实现该效果的，所以还是要引入js去直接获取DOM进行操作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git Commint规范</title>
      <link>https://mrzhang123.github.io/post/2017/2017-gitcommint/</link>
      <pubDate>Wed, 18 Oct 2017 22:11:36 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-gitcommint/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;之前看一个github的开源项目，看到要求使用angular的git commit规范，刚好自己项目中也需要规范git commit，所以就研究总结一下。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>React使用小记</title>
      <link>https://mrzhang123.github.io/post/2017/2017-reactsum/</link>
      <pubDate>Sun, 13 Aug 2017 22:57:48 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-reactsum/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;最近一段时间一直在使用react ／ react native结合redux做一些东西，所以总结一下在使用这些东西的时候自己遇到的一些问题&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>RN长列表--ListView &amp;&amp; SectionList</title>
      <link>https://mrzhang123.github.io/post/2017/2017-reactnativelist/</link>
      <pubDate>Sun, 11 Jun 2017 00:10:54 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-reactnativelist/</guid>
      <description>&lt;p&gt;突然发现自己的博客已经从原来的几天更新一次变成了如今的一个月更新一次[捂脸]，最近这一个月实在是太忙了，上个月月初的时候，接了一个RN的项目，做一个app，那时候老大问谁感兴趣，我直接说我。其实自己对RN一直很有兴趣，但是那时候由于在看Vue，所以并没有去搞，现在刚好有个项目，正好我可以去了解一下RN。说实话，这一答应不要紧，差点儿被RN气死，以前觉得RN应该比较成熟了，经过这段时间做项目，发现RN的坑还是很多的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>调用Google Map Api实现自定义Google Map</title>
      <link>https://mrzhang123.github.io/post/2017/2017-googlemap/</link>
      <pubDate>Sun, 11 Jun 2017 00:10:54 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-googlemap/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;前段时间做了一个简单调用Google Map API的项目，因为之前没有接触过这些，所以在看了文档做出来之后自己稍微总结一下。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>写一个简单的分页插件</title>
      <link>https://mrzhang123.github.io/post/2017/2017-pagination/</link>
      <pubDate>Sun, 07 May 2017 20:57:48 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-pagination/</guid>
      <description>&lt;p&gt;前段时间有一个项目需要用一个前端分页，说实话之前自己从来没搞过，这次准备自己搞一下，所以先找了几篇文章看看怎么写，但是网上的文章写分页的都基本看不懂，完全不知所云，所以决定在自己搞定分页后写一下如何弄这个。&lt;/p&gt;</description>
    </item>
    <item>
      <title>理解CSS命名规范--BEM</title>
      <link>https://mrzhang123.github.io/post/2017/2017-cssbem/</link>
      <pubDate>Wed, 05 Apr 2017 20:57:48 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-cssbem/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;最近在写博客主题的时候发现一个很严重的问题，由于css的命名并不是很规范，导致自己在后期修改的时候很是头疼，有些样式需要在浏览器中打开开发者工具去找，很是无奈。所以决定在写完主题之后学习下CSS命名规范中大名鼎鼎的BEM命名规范。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>如何写一个自己的hexo主题</title>
      <link>https://mrzhang123.github.io/post/2017/2017-hexotheme/</link>
      <pubDate>Sat, 01 Apr 2017 20:57:48 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-hexotheme/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;好长时间不写东西了，都在忙工作，去年三月份的时候我搞了一个hexo的博客，主题换过两三个吧，感觉都大部分的hexo主题都是东西比较多，有那么两三个比较简单的，但是自己并不是很喜欢，所以去年的时候就想着自己抽时间写一个自己的主题，但是当初看了几个hexo主题的源码，完全看不懂是什么，所以放弃了，今年又定了一个目标，写一个自己的hexo主题，终于终于在文章&lt;a href=&#34;https://segmentfault.com/a/1190000006057336%5D&#34;&gt;写一个自己的Hexo主题&lt;/a&gt;和该文中提到的作者自己写的主题&lt;a href=&#34;https://github.com/showonne/hexo-showonne&#34;&gt;hexo-showonne&lt;/a&gt;的启发下，开始了自己的hexo主题之旅，之后更参考自己用了很长时间的hexo主题——&lt;a href=&#34;https://github.com/ppoffice/hexo-theme-icarus&#34;&gt;hexo-theme-icarus&lt;/a&gt;进行了修正。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>使用git回退远程库代码</title>
      <link>https://mrzhang123.github.io/post/2017/2017-gitreset/</link>
      <pubDate>Sat, 04 Mar 2017 20:57:48 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-gitreset/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;前几天在公司合代码的时候出现了问题，需要reset回去，在同事的帮助下利用git的log进行了reset，虽然很简单，但是还是想记录一下。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Webpack2.x踩坑与总结</title>
      <link>https://mrzhang123.github.io/post/2017/2017-webpack/</link>
      <pubDate>Tue, 07 Feb 2017 22:41:09 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-webpack/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本篇为在学习Vue2.x的时候使用Webpack2.x的踩坑与总结，关于Vue2.x的踩坑与总结，&lt;a href=&#34;http://mrzhang123.github.io/2017/02/07/vue2/&#34;&gt;点击链接&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Vue2.x踩坑与总结</title>
      <link>https://mrzhang123.github.io/post/2017/2017-vue/</link>
      <pubDate>Tue, 07 Feb 2017 21:41:02 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-vue/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;年前就打算学习并总结一下vue2.x，但是因为年前工作比较多，所以进展十分缓慢，现在终于学了一大部分，而且自己在学习开发中也踩了不少坑也总结了不少，所以将自己踩过的坑总结一下分享出来。因为在项目中使用了webpack2.x，所以对于webpack2.x也有一个踩坑总结，&lt;a href=&#34;http://mrzhang123.github.io/2017/02/07/webpack2/&#34;&gt;点击链接&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>iframe跨域POST提交</title>
      <link>https://mrzhang123.github.io/post/2017/2017-iframepost/</link>
      <pubDate>Fri, 06 Jan 2017 23:07:16 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2017/2017-iframepost/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;以前在面试的时候经常遇到问关于跨域的事儿，所以自己对跨域有一定的概念性了解，知道什么是跨域以及解决跨域的方法，但是具体实际从来没有操作过，直到最近在公司项目中，遇到了一个需要使iframe跨域进行POST提交的实际案例，我才明白具体如何使用iframe进行跨域操作。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>再见2016，你好2017</title>
      <link>https://mrzhang123.github.io/post/2016/2016-2017newyear/</link>
      <pubDate>Sat, 31 Dec 2016 23:28:51 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-2017newyear/</guid>
      <description>&lt;p&gt;  今天是2016年12月31日，2016年的最后一天，记得那天组长让组里面每个成员做年终总结，自己想了想，真心不知道该说什么，因为其实自己来到小米的时间并不长，做的东西也不多，所以需要总结的东西很少。但是其实今年对于我个人来说，2016年是难忘的一年，发生了很多事情，值得我去回忆，去思考，但是，让我铭记的也许只有这两件：离开，开始新的生活。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Promise－－优雅解决回调嵌套</title>
      <link>https://mrzhang123.github.io/post/2016/2016-promise/</link>
      <pubDate>Tue, 13 Dec 2016 22:34:16 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-promise/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;最近一直在用空余时间研究node，当我写了一个简单的复制一个文件夹中的文件到另一个位置的时候，我看到了所谓的回调地狱，虽然只是四五个回调嵌套，但是这已经让我感到害怕，我写这么简单的一个小demo就写成这样，那稍微复杂点儿还了得？记得在看ES6的时候，里面提到过一种新的解决回调的方式－－－Promise，而且在node中也常用这个解决大量嵌套，所以这几天花了点儿时间看了看Promise，让我对Promise的认识更加清晰，所以写一些东西总结一下。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Git连接Github总结</title>
      <link>https://mrzhang123.github.io/post/2016/2016-gitgithub/</link>
      <pubDate>Sun, 13 Nov 2016 10:54:26 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-gitgithub/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;好长时间不写东西了， 因为换了工作，所以在忙着熟悉公司的项目代码，所以没什么时间搞自己的东西，回想了一下，在计划中要总结一下关于如何使用终端的git连接github，所以写一下这个。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Linux日常使用总结</title>
      <link>https://mrzhang123.github.io/post/2016/2016-linuxstudy/</link>
      <pubDate>Sun, 02 Oct 2016 23:33:47 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-linuxstudy/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;自己一直对linux充满好奇，这次换了新的工作后，由于使用Mac OS和linux，所以国庆回来，给自己的电脑装了ubuntu来熟悉linux。在安装完成后遇到一些问题，经过谷歌都一一解决了，写这篇博文分享给大家。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>北京的这一年，写在离开的这一天</title>
      <link>https://mrzhang123.github.io/post/2016/2016-thoughts/</link>
      <pubDate>Sat, 24 Sep 2016 09:41:09 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-thoughts/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;2016年9月23日，对于我来说是一个特殊的日子，我离开了我工作一年多的公司，这是我第一家公司，我的职业之路起于这里，这里是我起飞的地方。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>基于Gulp的前端自动化工程搭建</title>
      <link>https://mrzhang123.github.io/post/2016/2016-gulpuse/</link>
      <pubDate>Wed, 07 Sep 2016 23:25:06 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-gulpuse/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;上个月月底在公司提出关于前后端分离的想法，并且开始研究关于前后端分离，前端工程化，模块化的一些东西，上周开始我准备自己开始写基于Gulp流的前端工程文件，这两天有时间，着手开始实现这个想法，但是写的过程中，遇到了一些问题，正是因为这些问题的解决让我对Gulp的流式处理有了更深的理解，写下这篇文章，分享一下这俩天我在写Gulp的时候学到的一些东西。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>CSS3实现翻转卡牌效果</title>
      <link>https://mrzhang123.github.io/post/2016/2016-flipcards/</link>
      <pubDate>Wed, 17 Aug 2016 23:35:52 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-flipcards/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;今天在工作中遇到需求，需要用CSS3写一个卡片翻转效果，这个效果看起来简单，但是还是涉及到一些不常用的CSS3中的3D转换的属性以及实现该效果的思路，所以这里总结一下。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Javascript中字符串方法总结</title>
      <link>https://mrzhang123.github.io/post/2016/2016-jsstring/</link>
      <pubDate>Sun, 14 Aug 2016 16:48:34 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-jsstring/</guid>
      <description>&lt;h2 id=&#34;字符方法&#34;&gt;字符方法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;chartat与charcodeat&#34;&gt;chartAt()与charCodeAt()&lt;/h3&gt;&#xA;&lt;p&gt;参数：&lt;em&gt;基于&lt;strong&gt;0的字符位置&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;**chartAt()&lt;strong&gt;以单字符字符串的形式返回给定位置的那个字符。而&lt;/strong&gt;charCodeAt()**返回的是字符编码。&lt;/p&gt;</description>
    </item>
    <item>
      <title>JS中的位置与大小</title>
      <link>https://mrzhang123.github.io/post/2016/2016-jsposition/</link>
      <pubDate>Wed, 03 Aug 2016 00:06:31 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-jsposition/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;最近事儿比较多，一直没时间写东西，前几天又遇到关于获取元素大小的问题，每次遇到这类问题就翻书，比较费时间，所以总结一下。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Javascript中Array方法的总结</title>
      <link>https://mrzhang123.github.io/post/2016/2016-jsarray/</link>
      <pubDate>Wed, 03 Aug 2016 00:01:05 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-jsarray/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;在ECMAScript中最常用的类型之一就是Array类型，Array类型的方法也有很多，所以在这篇文章中，梳理一下Array类型的方法。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Vuejs的一些总结</title>
      <link>https://mrzhang123.github.io/post/2016/2016-summarizevue/</link>
      <pubDate>Thu, 14 Jul 2016 00:07:45 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-summarizevue/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;最近一段时间忙着工作的一些事情，同时自己也在试着把项目中的一些移动端页面试着用vuejs重写，所以没时间写文章，今天终于有空可以写一下，由于页面并没有写完，所以就将自己这几天做页面的时候遇到的一些问题总结了一下。其实很多在官网都能找到，但是我们只看官网教程不去写，很难理解到底是什么意思，这里我把我用到的列出来。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>六月总结</title>
      <link>https://mrzhang123.github.io/post/2016/2016-summarizejune/</link>
      <pubDate>Thu, 30 Jun 2016 00:03:50 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-summarizejune/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;不知不觉中，六月已经过去，七月悄悄到来，写这篇文章，总结六月，并给七月做一些计划。在未来，每个月都会做一次总结，无论得失，都记录下来，记录自己的成长。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>基于Vue的简单的单页面应用</title>
      <link>https://mrzhang123.github.io/post/2016/2016-vue1/</link>
      <pubDate>Wed, 08 Jun 2016 01:14:39 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-vue1/</guid>
      <description>&lt;h2 id=&#34;基于vue的简单的单页面应用&#34;&gt;基于Vue的简单的单页面应用&lt;/h2&gt;&#xA;&lt;p&gt;在对Vue和webpack有了一定了解后，我们就可以开始利用所了解的东西做一个简单的webapp了，不了解的同学可以看下我的前两篇关于vue和webpack的基本应用：&#xA;&lt;a href=&#34;https://segmentfault.com/a/1190000005614864&#34;&gt;webpack+vue起步&lt;/a&gt;&#xA;&lt;a href=&#34;https://segmentfault.com/a/1190000005616974&#34;&gt;利用webpack和vue实现组件化&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用webpack和vue实现组件化</title>
      <link>https://mrzhang123.github.io/post/2016/2016-webpackvue2/</link>
      <pubDate>Thu, 02 Jun 2016 00:48:31 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-webpackvue2/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;上一篇&lt;a href=&#34;https://segmentfault.com/a/1190000005614864&#34;&gt;webpack+vue起步&lt;/a&gt;我们实现了用webpack打包vue的最基本用法，这篇我们将利用webpack+vue实现组件化&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>webpack与vue起步</title>
      <link>https://mrzhang123.github.io/post/2016/2016-webpackvue1/</link>
      <pubDate>Tue, 31 May 2016 21:37:08 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-webpackvue1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;记得第一次知道Vue.js是在勾三股四大大的微博，那时候他开始翻译vue的文档，从那时候开始到现在，看了几次vue的教程，每次都有更深的理解，因为之前并没有研究过angular等框架，所以对MVVM并不是很了解，但是经过这段时间对vuejs的一些研究，越来越懂了，这篇文章，只是对vuejs和webpack配合的非常基础的文章，我想随着我对vue的深入理解，会对组件化，模块化，MVVM有更深入的理解。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Webpack初探</title>
      <link>https://mrzhang123.github.io/post/2016/2016-webpack1/</link>
      <pubDate>Tue, 31 May 2016 21:02:20 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-webpack1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;很早就听说webpack包管理工具，但是一直没有机会学习，这次又看到&lt;a href=&#34;http://gold.xitu.io/#/&#34;&gt;掘金&lt;/a&gt;上面有关于vue+webpack的初级文章，而且最近公司没什么事儿做，决定搞一下。在搞的过程中，虽然按照文章中写的去做，但是还是有很多问题，所以写下本文，总结下我遇到的问题以及解决办法。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>慕课网---深入理解vertical-align总结</title>
      <link>https://mrzhang123.github.io/post/2016/2016-verticalalign-1/</link>
      <pubDate>Mon, 23 May 2016 23:07:35 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-verticalalign-1/</guid>
      <description>&lt;p&gt;看了张鑫旭在慕课网关于vertical-align的讲解，感觉讲的挺深，所以总结了一下&#xA;vertical-align的百分比值相对于line-height计算&#xA;IE6/7下line-height不支持小数&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gulp&#43;BroserSync实现浏览器自动刷新</title>
      <link>https://mrzhang123.github.io/post/2016/2016-gulpbrosersync/</link>
      <pubDate>Mon, 16 May 2016 22:10:39 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-gulpbrosersync/</guid>
      <description>&lt;p&gt;在写前端代码的时候，我们为了看效果，需要一直按F5进行刷新，这样做很繁琐而且非常浪费时间，在网上搜过后发现很多关于自动刷新的办法，这里我介绍的是基于gulp和broserSync实现浏览器的自动刷新，即只要编辑器保存，浏览器就会自动刷新。&lt;/p&gt;</description>
    </item>
    <item>
      <title>text-algin:justify实现文本两端对齐</title>
      <link>https://mrzhang123.github.io/post/2016/2016-textalgin/</link>
      <pubDate>Wed, 11 May 2016 00:25:18 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-textalgin/</guid>
      <description>&lt;p&gt;最近在写页面的时候遇到了一个问题&amp;mdash;当行文本双端对齐，大家都知道CSS属性中有一个“text-align:justify”，但是这个属性使用的时候，要求还是挺多的，尤其是要实现单行文本双端对齐。关于两端对齐，大漠和张鑫旭的博客中都有文章讲，非常不错，推荐给大家：&lt;/p&gt;</description>
    </item>
    <item>
      <title>利用CSS3新单位rem实现响应</title>
      <link>https://mrzhang123.github.io/post/2016/2016-filerem/</link>
      <pubDate>Tue, 26 Apr 2016 22:49:25 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-filerem/</guid>
      <description>&lt;p&gt;做移动端的响应方法有很多，但是我喜欢用 CSS3 的新单位 rem，这个单位非常好用（有个比它还好用的单位 vh，不过兼容性太差，不考虑了），根据不同屏幕，设置不同的基准值，从而实现适配各个屏幕尺寸的移动设备。慕课网有一套非常不错的讲关于 rem 的视频，这里推荐给大家&lt;a href=&#34;http://www.imooc.com/learn/494&#34;&gt;http://www.imooc.com/learn/494&lt;/a&gt;。&#xA;rem&amp;mdash;-CSS3 中新增的单位，兼容性还不错，常用于移动端实现字体的响应，与 em 不同，rem 根据根元素的 font-size 计算，所以要利用 rem 实现适配各个屏幕的大小，就需要根据不同的屏幕设置根元素不同的 font-size 的值。所以我们需要做下面的一些工作。&lt;/p&gt;</description>
    </item>
    <item>
      <title>文件上传（二）---新XMLHttpRequest实现带进度条文件上传</title>
      <link>https://mrzhang123.github.io/post/2016/2016-fileupload2/</link>
      <pubDate>Thu, 14 Apr 2016 23:10:58 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-fileupload2/</guid>
      <description>&lt;p&gt;前几天搞得那个文件上传，最近工作不太忙，又开始完善。这次主要添加了文件上传的进度部分，主要用到的则是XMLHttpRequest2的progress，由于我读的是《javascript高级程序设计》（第三版），这里我遇到一个关于progeress事件的坑，后面详细解答。&lt;/p&gt;</description>
    </item>
    <item>
      <title>初探ES6——轮播图实践总结</title>
      <link>https://mrzhang123.github.io/post/2016/2016-es6practice/</link>
      <pubDate>Mon, 11 Apr 2016 00:10:54 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-es6practice/</guid>
      <description>&lt;p&gt;最近因为同学的一个轮播图不会写，让我萌生了用ES6写一个轮播图的想法（本人喜欢这些玩儿一些新的东西），以前就知道ES6，但是一直没有学，现在终于下决心学了，借助阮一峰老师的书&lt;a href=&#34;http://es6.ruanyifeng.com/&#34;&gt;ECMAScript 6 入门&lt;/a&gt; 和Youtube上面老外的视频学习ES6非常不错。阮一峰老师的书写的非常详细，推荐想学习的ES6的同学仔细看看。本篇文章会总结在实践中用到的ES6的知识。&lt;/p&gt;</description>
    </item>
    <item>
      <title>文件上传（一）---H5 file API，canvas</title>
      <link>https://mrzhang123.github.io/post/2016/2016-fileupload/</link>
      <pubDate>Thu, 31 Mar 2016 23:35:12 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-fileupload/</guid>
      <description>&lt;p&gt;最近公司让调研关于webUploader的图片上传中能否压缩，能否实现图片的格式转换，如果能如何实现，经过调研，这个插件可以实现文件的压缩，但是不能实现图片的格式转换，同时在调研过程中，知道了很多新的东西，H5 file API，canvas，等等，所以有了自己写一个文件上传来熟悉这些东西，所以有了本篇文章。&lt;/p&gt;</description>
    </item>
    <item>
      <title>H5焦点管理---tabindex与document.activeElement</title>
      <link>https://mrzhang123.github.io/post/2016/2016-activeelement/</link>
      <pubDate>Sat, 26 Mar 2016 10:20:56 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-activeelement/</guid>
      <description>&lt;p&gt;周四下午测试人员提出BUG，说我写的那个类支付宝密码框在按下Tab键时候无法像原生的form表单中的input那样被激活，当时的第一反应是，我的密码框原本就是用div模拟的，怎么可能想form表单一样在Tab键时候激活呢。但是当我打开支付宝官网，按下tab键后，密码框可以被激活，这激起了我的好奇心，也就有了后来对tabindex和document.activeElement的发现。废话不多说，进入正题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>H5 Canvas实现图片格式的转换</title>
      <link>https://mrzhang123.github.io/post/2016/2016-canvas/</link>
      <pubDate>Tue, 22 Mar 2016 23:46:18 +0000</pubDate>
      <guid>https://mrzhang123.github.io/post/2016/2016-canvas/</guid>
      <description>&lt;p&gt;今天早上到公司，看到CTO要求调查关于前端如何实现图片格式转换，自己上网找了下关于canvas如何实现图片格式转换，其实还是蛮简单的，但是因为网上的教程着实写的简单，而且都一样，我也是醉了，所以写下这篇博客，以记录今天的调查结果。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
